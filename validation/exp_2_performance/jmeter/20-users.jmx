<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Domain Model">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Domain Model">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">admin/outbox</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;@context&quot;: [&#xd;
    &quot;https://www.w3.org/ns/activitystreams&quot;,&#xd;
    &quot;https://modelfed/ns/modelfed.jsonld&quot;&#xd;
  ],&#xd;
  &quot;type&quot;: &quot;Create&quot;,&#xd;
  &quot;id&quot;: &quot;http://127.0.0.1:8000/admin/activities/a1b2c3&quot;,&#xd;
  &quot;actor&quot;: &quot;http://127.0.0.1:8000/admin/&quot;,&#xd;
  &quot;to&quot;: [&#xd;
    &quot;http://127.0.0.1:8001/user1/&quot;,&#xd;
    &quot;http://127.0.0.1:8003/user2/&quot;,&#xd;
    &quot;http://127.0.0.1:8004/user3/&quot;,&#xd;
    &quot;http://127.0.0.1:8005/user4/&quot;,&#xd;
    &quot;http://127.0.0.1:8006/user5/&quot;,&#xd;
    &quot;http://127.0.0.1:8007/user6/&quot;,&#xd;
    &quot;http://127.0.0.1:8008/user7/&quot;,&#xd;
    &quot;http://127.0.0.1:8009/user8/&quot;,&#xd;
    &quot;http://127.0.0.1:8010/user9/&quot;,&#xd;
    &quot;http://127.0.0.1:8011/user10/&quot;,&#xd;
    &quot;http://127.0.0.1:8012/user11/&quot;,&#xd;
    &quot;http://127.0.0.1:8013/user12/&quot;,&#xd;
    &quot;http://127.0.0.1:8014/user13/&quot;,&#xd;
    &quot;http://127.0.0.1:8015/user14/&quot;,&#xd;
    &quot;http://127.0.0.1:8016/user15/&quot;,&#xd;
    &quot;http://127.0.0.1:8017/user16/&quot;,&#xd;
    &quot;http://127.0.0.1:8018/user17/&quot;,&#xd;
    &quot;http://127.0.0.1:8019/user18/&quot;,&#xd;
    &quot;http://127.0.0.1:8020/user19/&quot;&#xd;
  ],&#xd;
  &quot;object&quot;: {&#xd;
    &quot;type&quot;: &quot;DomainModel&quot;,&#xd;
    &quot;id&quot;: &quot;http://127.0.0.1:8000/admin/domainmodel/digital_product_passport&quot;,&#xd;
    &quot;name&quot;: &quot;Digital_Product_Passport&quot;&#xd;
  },&#xd;
  &quot;timestamp&quot;: &quot;2024-02-11T15:30:45Z&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Activities - 20 users" enabled="true">
        <intProp name="ThreadGroup.num_threads">60</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin (BESSER Activities)">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">admin/outbox</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;@context&quot;: [&#xd;
    &quot;https://www.w3.org/ns/activitystreams&quot;,&#xd;
    &quot;https://modelfed/ns/modelfed.jsonld&quot;&#xd;
  ],&#xd;
  &quot;type&quot;: &quot;Create&quot;,&#xd;
  &quot;id&quot;: &quot;http://127.0.0.1:8000/admin/activities/a2b3c4_${__counter(FALSE)}&quot;,&#xd;
  &quot;actor&quot;: &quot;http://127.0.0.1:8000/admin/&quot;,&#xd;
  &quot;to&quot;: [&#xd;
    &quot;http://127.0.0.1:8001/user1/&quot;,&#xd;
    &quot;http://127.0.0.1:8003/user2/&quot;,&#xd;
    &quot;http://127.0.0.1:8004/user3/&quot;,&#xd;
    &quot;http://127.0.0.1:8005/user4/&quot;,&#xd;
    &quot;http://127.0.0.1:8006/user5/&quot;,&#xd;
    &quot;http://127.0.0.1:8007/user6/&quot;,&#xd;
    &quot;http://127.0.0.1:8008/user7/&quot;,&#xd;
    &quot;http://127.0.0.1:8009/user8/&quot;,&#xd;
    &quot;http://127.0.0.1:8010/user9/&quot;,&#xd;
    &quot;http://127.0.0.1:8011/user10/&quot;,&#xd;
    &quot;http://127.0.0.1:8012/user11/&quot;,&#xd;
    &quot;http://127.0.0.1:8013/user12/&quot;,&#xd;
    &quot;http://127.0.0.1:8014/user13/&quot;,&#xd;
    &quot;http://127.0.0.1:8015/user14/&quot;,&#xd;
    &quot;http://127.0.0.1:8016/user15/&quot;,&#xd;
    &quot;http://127.0.0.1:8017/user16/&quot;,&#xd;
    &quot;http://127.0.0.1:8018/user17/&quot;,&#xd;
    &quot;http://127.0.0.1:8019/user18/&quot;,&#xd;
    &quot;http://127.0.0.1:8020/user19/&quot;&#xd;
  ],&#xd;
  &quot;object&quot;: {&#xd;
    &quot;type&quot;: &quot;Class&quot;,&#xd;
    &quot;id&quot;: &quot;http://127.0.0.1:8000/admin/classes/product_passport_${__counter(FALSE)}&quot;,&#xd;
    &quot;name&quot;: &quot;ProductPassport_${__counter(FALSE)}&quot;,&#xd;
    &quot;attributes&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Property&quot;,&#xd;
        &quot;id&quot;: &quot;http://127.0.0.1:8000/freddie/properties/p8b1c1_${__counter(FALSE)}&quot;,&#xd;
        &quot;name&quot;: &quot;name_${__counter(FALSE)}&quot;,&#xd;
        &quot;elementType&quot;: &quot;str&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Property&quot;,&#xd;
        &quot;id&quot;: &quot;http://127.0.0.1:8000/freddie/properties/a2tt2c3_${__counter(FALSE)}&quot;,&#xd;
        &quot;name&quot;: &quot;year_${__counter(FALSE)}&quot;,&#xd;
        &quot;elementType&quot;: &quot;int&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;target&quot;: &quot;http://127.0.0.1:8000/admin/domainmodel/digital_product_passport&quot;,&#xd;
  &quot;timestamp&quot;: &quot;2024-02-11T15:31:45Z&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
